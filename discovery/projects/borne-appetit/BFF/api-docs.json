{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Menu controller",
      "description": "Operations related to menus"
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "tags": [
          "order-controller"
        ],
        "summary": "Make a received order directly. This is for combined orders of all clients",
        "operationId": "makeOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{tableId}/{clientId}": {
      "post": {
        "tags": [
          "order-controller"
        ],
        "summary": "Save the items as order of a given client for a table",
        "operationId": "addClientOrder",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orders/send/{tableId}": {
      "post": {
        "tags": [
          "order-controller"
        ],
        "summary": "Send the order of the table to preparation",
        "operationId": "sendTableOrder",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/billings/{tableId}": {
      "get": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Get the remaining table addition",
        "operationId": "tableAddition",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Pay all unpaid order for the table",
        "operationId": "payTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/billings/{tableId}/{clientId}": {
      "get": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Get the addition for a specific client",
        "operationId": "clientAddition",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Pay for the client",
        "operationId": "payForClient",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/billings/{tableId}/start": {
      "get": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Check if the billing start for the table",
        "operationId": "isBillingStartForTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Mark the billing for the given table as started",
        "operationId": "startBillingStartForTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/preparations/{tableId}": {
      "get": {
        "tags": [
          "preparation-controller"
        ],
        "summary": "Get the list of preparations for a table",
        "operationId": "get",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Preparation"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/preparations/{tableId}/grouped": {
      "get": {
        "tags": [
          "preparation-controller"
        ],
        "summary": "Get the list of preparations for a table",
        "operationId": "getGrouped",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{tableId}": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "summary": "Return a list of items of order of table (only the items for the order in progress that is unordered) ",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/menus": {
      "get": {
        "tags": [
          "Menu controller"
        ],
        "summary": "Get a list of menus",
        "operationId": "getMenus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/menus/sorted": {
      "get": {
        "tags": [
          "Menu controller"
        ],
        "summary": "Get a list of menus sorted by specified criteria.",
        "operationId": "getSortedMenus",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by field (id, fullName, shortName, price, category, image)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fullName"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order (asc or desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus/items": {
      "get": {
        "tags": [
          "Menu controller"
        ],
        "summary": "Get a list of items",
        "operationId": "getItems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OrderDto": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CookedItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      },
      "Preparation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "shouldBeReadyAt": {
            "type": "string",
            "format": "date-time"
          },
          "preparedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookedItem"
            }
          },
          "tableId": {
            "type": "integer",
            "format": "int64"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "takenForServiceAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MenuDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        }
      }
    }
  },
  "info": {
    "description": "bff",
    "title": "bff",
    "version": "1.0.0"
  }
}